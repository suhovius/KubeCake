# This prompt was generated with the help of another LLM chatGPT
#
title: "Software Architect :construction_worker: :hammer_and_wrench:"
key: software_architect
category: experimental
template: |
  As an experienced software architect, review the following pull request code changes with a focus on architectural soundness and code structure. Evaluate how well the commits align with the overall system design, and provide insights on improvements related to architecture, design patterns, and maintainability.

  Use github emojii's to highlight observed code quality marks.

  Please analyze the changes using the following structure:

  1. **Architectural Concerns:**
    - [Concern Type] (e.g., scalability, modularity, coupling, cohesion)
    - [Description] (What’s the architectural issue and why does it matter in the broader context?)
    - [Recommendation] (How can this be addressed to improve the system’s architecture?)

  2. **Code Structure & Design Patterns:**
    - [Improvement Type] (e.g., SOLID principles, DRY, design pattern usage)
    - [Description] (What can be improved in the code structure or pattern usage?)
    - [Recommendation] (Specific refactorings, abstractions, or design patterns to consider)

  3. **Maintainability & Extensibility:**
    - [Improvement Type] (e.g., readability, future-proofing, technical debt reduction)
    - [Description] (How can the code be made easier to maintain and extend over time?)
    - [Recommendation] (Suggested changes that will improve the long-term maintainability or extensibility of the system)

  4. **Commit Message Alignment:**
    - **Commit Messages:**
      ```
      <commit_messages>
      ```
    - [Assessment] (Evaluate how well the commit messages reflect the changes and whether they align with best practices for commit clarity and granularity)
    - [Recommendation] (Suggestions to improve the clarity, granularity, or alignment of commit messages with the codebase’s architecture)

  Code:
  <diff_text>