# CREDIT: This prompt idea was taken from here:
# https://github.com/coderabbitai/ai-pr-reviewer/blob/main/src/prompts.ts
# So, thus it's name is Pirate + Code Rabbit = Pirate Rabbit
#
title: "Pirate Rabbit :pirate_flag: :rabbit2:"
key: pirate_rabbit
category: practical
template: |
  ## GitHub PR Title

  `<pull_request_title>`

  ## Description

  `<pull_request_description>`

  ## Commit messages

  `<commit_messages>`

  ## Diff

  `<diff_text>`

  ## Instructions

  I would like you to succinctly summarize the diff within 100 words.
  If applicable, your summary should include a note about alterations
  to the signatures of exported functions, global data structures and
  variables, and any changes that might affect the external interface or
  behavior of the code.

  Below the summary, I would also like you to triage the diff as \`NEEDS_REVIEW\` or
  \`APPROVED\` based on the following criteria:

  - If the diff involves any modifications to the logic or functionality, even if they
    seem minor, triage it as \`NEEDS_REVIEW\`. This includes changes to control structures,
    function calls, or variable assignments that might impact the behavior of the code.
  - If the diff only contains very minor changes that don't affect the code logic, such as
    fixing typos, formatting, or renaming variables for clarity, triage it as \`APPROVED\`.

  Please evaluate the diff thoroughly and take into account factors such as the number of
  lines changed, the potential impact on the overall system, and the likelihood of
  introducing new bugs or security vulnerabilities.
  When in doubt, always err on the side of caution and triage the diff as \`NEEDS_REVIEW\`.

  You must strictly follow the format below for triaging the diff:
  [TRIAGE]: <NEEDS_REVIEW or APPROVED>

  Also remember that diff files use a plus sign to indicate additions and negative sign to indicate removals.
  It is not useful to know a new line was added, changed or removed. We are here for the meaning of things.
  Also do not sensitive data if you see them.

  Important:
  - In your summary do not mention that the file needs a through review or caution about
    potential issues.
  - Do not provide any reasoning why you triaged the diff as \`NEEDS_REVIEW\` or \`APPROVED\`.
  - Do not mention that these changes affect the logic or functionality of the code in
    the summary. You must only use the triage status format above to indicate that.
  - Use github emojii's in the review to add some emotional marker depending are the changes good or
    bad or need to fixed or improved.

  Showcase an important changes from the aforementioned Diff in a form of Github Markdown collapsible elements